unit StamMitarbeiterFrm;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes,
  System.Generics.Collections, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.StdCtrls, Vcl.ExtCtrls,
  Vcl.Mask, Vcl.DBCtrls, Vcl.Grids, Vcl.DBGrids, classesPersonen, Helpers;

type
  TStamMitarbeiterForm = class(TForm)
    NeuButton: TButton;
    BearbeitenButton: TButton;
    SpeichernButton: TButton;
    AbbrechenButton: TButton;
    LoeschenButton: TButton;
    Label1: TLabel;
    Label2: TLabel;
    SuchenButton: TButton;
    DBGrid1: TDBGrid;
    FDTable1: TFDTable;
    DataSource1: TDataSource;
    VornameEdit: TEdit;
    NameEdit: TEdit;
    Button1: TButton;
    function EingabeValidieren(): boolean;
    procedure SuchenButtonClick(Sender: TObject);
    procedure AnzeigeFuellen;
    procedure AnzeigeUmschalten(Status: TFormStatus);
    procedure FormShow(Sender: TObject);
    procedure BearbeitenButtonClick(Sender: TObject);
    procedure AbbrechenButtonClick(Sender: TObject);
    procedure LoeschenButtonClick(Sender: TObject);
    procedure SpeichernButtonClick(Sender: TObject);
    procedure NeuButtonClick(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    FormStatus: TFormStatus;
  public
    { Public-Deklarationen }
  end;

var
  StamMitarbeiterForm: TStamMitarbeiterForm;
  Mitarbeiter        : TMitarbeiter;

implementation

uses MainFrm, SuchenFrm;

{$R *.dfm}

{ TNewUserForm }

procedure TStamMitarbeiterForm.AbbrechenButtonClick(Sender: TObject);
begin
  self.AnzeigeFuellen;
  self.AnzeigeUmschalten(fsGesperrt);
end;

procedure TStamMitarbeiterForm.AnzeigeFuellen;
begin
  if Assigned(Mitarbeiter) then
  begin
    self.NameEdit.Text := Mitarbeiter.Name;
    self.VornameEdit.Text := Mitarbeiter.Vorname;
  end
  else
  begin
    self.NameEdit.Clear;
    self.VornameEdit.Clear
  end;
end;

procedure TStamMitarbeiterForm.AnzeigeUmschalten(Status: TFormStatus);
begin
  self.FormStatus := Status;
  self.NeuButton.Enabled := self.FormStatus in [fsGesperrt, fsLeer];
  self.BearbeitenButton.Enabled := self.FormStatus = fsGesperrt;
  self.SpeichernButton.Enabled := not(self.FormStatus in [fsGesperrt, fsLeer]);
  self.AbbrechenButton.Enabled := self.FormStatus in [fsBearbeiten, fsNeu];
  self.LoeschenButton.Enabled := self.FormStatus = fsGesperrt;
  self.SuchenButton.Enabled := self.FormStatus in [fsGesperrt, fsLeer];
  self.NameEdit.Enabled := not(self.FormStatus in [fsGesperrt, fsLeer]);
  self.VornameEdit.Enabled := not(self.FormStatus in [fsGesperrt, fsLeer]);
end;

procedure TStamMitarbeiterForm.BearbeitenButtonClick(Sender: TObject);
begin
  self.AnzeigeUmschalten(fsBearbeiten);
end;

procedure TStamMitarbeiterForm.Button1Click(Sender: TObject);
begin
  self.FDTable1.Refresh;
end;

function TStamMitarbeiterForm.EingabeValidieren:
    boolean;
begin
  result := false;

end;

procedure TStamMitarbeiterForm.FormShow(Sender: TObject);
begin
self.AnzeigeFuellen;
  self.AnzeigeUmschalten(fsLeer);
end;

procedure TStamMitarbeiterForm.LoeschenButtonClick(Sender: TObject);
begin
  if messagedlg('Möchten Sie den Mitarbeiter ' + Mitarbeiter.VollName + ' wirklich löschen?', mtConfirmation,
      [mbYes, mbCancel], 0) = mrYes THEN
    Mitarbeiter.Loeschen;
  FreeAndNil(Mitarbeiter);
  self.AnzeigeUmschalten(fsLeer);
  self.AnzeigeFuellen;
end;

procedure TStamMitarbeiterForm.NeuButtonClick(Sender: TObject);
begin
  if Assigned(Mitarbeiter) then
    FreeAndNil(Mitarbeiter);
  self.AnzeigeUmschalten(fsNeu);
  self.AnzeigeFuellen;
end;

procedure TStamMitarbeiterForm.SpeichernButtonClick(Sender: TObject);
begin
  if Assigned(Mitarbeiter) then
    Mitarbeiter.Speichern
  else
  begin
    Mitarbeiter := TMitarbeiter.Create(NameEdit.Text, VornameEdit.Text, MainForm.MainConnection);
    Mitarbeiter.Speichern;
  end;
  self.AnzeigeUmschalten(fsGesperrt);
end;

procedure TStamMitarbeiterForm.SuchenButtonClick(Sender: TObject);
var
  SuchenForm   : TSuchenForm;
  SuchEintraege: TList<TSucheintrag>;
begin
  SuchEintraege := TList<TSucheintrag>.Create;
  SuchEintraege.Add(TSucheintrag.Create('Name', 'Nachname'));
  SuchEintraege.Add(TSucheintrag.Create('Vorname', 'Vorname'));
  SuchEintraege.Add(TSucheintrag.Create('Vorname + '' '' + Name', 'voller Name'));
  SuchenForm := TSuchenForm.Create(application, 'Mitarbeiter', SuchEintraege, MainForm.MainConnection);
  if SuchenForm.ShowModal = mrOK then
  begin
    if Assigned(Mitarbeiter) then
      FreeAndNil(Mitarbeiter);
    Mitarbeiter := TMitarbeiter.CreateFromId(SuchenForm.Ergebnis, MainForm.MainConnection);
    self.AnzeigeFuellen;
    self.AnzeigeUmschalten(fsGesperrt);
  end;
end;

end.
